diff --git a/node_modules/@blocksuite/affine-components/dist/rich-text/inline/presets/nodes/reference-node/reference-alias-popup.js b/node_modules/@blocksuite/affine-components/dist/rich-text/inline/presets/nodes/reference-node/reference-alias-popup.js
index 8be0129..2e13c79 100644
--- a/node_modules/@blocksuite/affine-components/dist/rich-text/inline/presets/nodes/reference-node/reference-alias-popup.js
+++ b/node_modules/@blocksuite/affine-components/dist/rich-text/inline/presets/nodes/reference-node/reference-alias-popup.js
@@ -129,7 +129,8 @@ let ReferenceAliasPopup = (() => {
             __esDecorate(this, null, _std_decorators, { kind: "accessor", name: "std", static: false, private: false, access: { has: obj => "std" in obj, get: obj => obj.std, set: (obj, value) => { obj.std = value; } }, metadata: _metadata }, _std_initializers, _std_extraInitializers);
             if (_metadata) Object.defineProperty(this, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
         }
-        static { this.styles = css `
+        static {
+            this.styles = css`
     :host {
       box-sizing: border-box;
     }
@@ -168,7 +169,7 @@ let ReferenceAliasPopup = (() => {
       }
     }
 
-    input {
+    .alias-form-popup input {
       display: flex;
       flex: 1;
       padding: 0;
@@ -177,10 +178,10 @@ let ReferenceAliasPopup = (() => {
       color: var(--affine-text-primary-color);
       ${FONT_XS};
     }
-    input::placeholder {
+    .alias-form-popup input::placeholder {
       color: var(--affine-placeholder-color);
     }
-    input:focus {
+    .alias-form-popup input:focus {
       outline: none;
     }
 
@@ -189,7 +190,8 @@ let ReferenceAliasPopup = (() => {
       color: inherit;
       text-transform: none;
     }
-  `; }
+  `;
+        }
         _onKeydown(e) {
             e.stopPropagation();
             if (!e.isComposing) {
@@ -244,7 +246,7 @@ let ReferenceAliasPopup = (() => {
             this.inputElement.select();
         }
         render() {
-            return html `
+            return html`
       <div class="overlay-root">
         <div class="overlay-mask"></div>
         <div class="alias-form-popup">
@@ -295,12 +297,12 @@ let ReferenceAliasPopup = (() => {
                 ],
             })
                 .then(({ x, y }) => {
-                const popupContainer = this.popupContainer;
-                if (!popupContainer)
-                    return;
-                popupContainer.style.left = `${x}px`;
-                popupContainer.style.top = `${y}px`;
-            })
+                    const popupContainer = this.popupContainer;
+                    if (!popupContainer)
+                        return;
+                    popupContainer.style.left = `${x}px`;
+                    popupContainer.style.top = `${y}px`;
+                })
                 .catch(console.error);
         }
         #delta_accessor_storage;
